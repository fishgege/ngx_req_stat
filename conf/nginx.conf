
user  root;
worker_processes  1;

daemon on;
master_process on;
worker_rlimit_core 50000000;
working_directory /tmp;

error_log  logs/error.log;

#pid        logs/nginx.pid;


events {
	worker_connections  1024;
}

http {
	include       mime.types;
	default_type  application/octet-stream;


	keepalive_timeout  65;
	mongo_uri "mongodb://127.0.0.1:27017/";
	mongo_db ngx_stat;



	server {
		listen       80;
		server_name  localhost;

		location /login {
			req_stat stat_80 def "{'%inc': {'count':1,'hour_cnt.$hour':1, 'status.$status':1,'req_time.all': $request_time, 'req_time.$hour': $request_time}}";

			if ($uri = "/login/404") {
				return 404;
			}
			echo "login $args";
		}

		location /login_new {
			#使用stat_key自定义主键,这里是把请求参数client_type作为主键的一部分了
			stat_key key_login_new "{'date':'$date','url':'$uri-$arg_client_type'}";
			#表名，可以使用不同的，也可以和别的location,server使用一个。
			req_stat stat_login key_login_new "{'%inc': {'count':1,'hour_cnt.$hour':1, 'status.$status':1,'req_time.all': $request_time, 'req_time.$hour': $request_time}}";
			echo "login_new $args";
		}

		location / {
			root   html;
			index  index.html index.htm;
		}

	}

	server {
		listen       81;
		
		location /login {
			req_stat stat_81 def "{'%inc': {'count':1,'hour_cnt.$hour':1, 'status.$status':1,'req_time.all': $request_time, 'req_time.$hour': $request_time}}";

			if ($uri = "/login/404") {
				return 404;
			}
			echo "login $args";
		}

		location /nolog {
			echo "nolog ##########";
			req_stat off;
		}
	}
}
